 //await이 실행되는 시기는 언제??
// try안의 코드가 올바르지만 throw를 던지면 catch가 실행되는가?

.json() 문자열 -> 객체여

전역코드 - 전역 실행 컨텍스트
함수 코드 - 함수 실행 컨텍스트
모듈코드 - 모듈 실행 컨텍스트

전역실행컨텍스트 생성
전역 실행 컨텍스트 let x y z sum에 등록
렉시컬형성
x,y,z 항당, sum 호출

(호출)실행을 하면 그때 실행 컨텍스트를 생성한다.
a,b(초기값)를 함수 실행 컨텍스트에 등록
a,b에 값을 각각 할당z값이 내부 스코프에 없음 스코프 체인을 타고 올라가z라는 변수가 상위에 있는지 확이하여 가져운다.


function one(){ two(); }
function two(){ three(); }
function three(){ console.log('end'); }

호출 스택 (위에서부터 빠진다.)
console.log('end')
three()
two()
one()


호출스택에서 모두 실행하는 것  비동기 처리.
호출스택에서 일을하며 백그라운드에서 실행된다 -> 비동기 처리
//객체는 문자열로 변환해서 저장해야한다.
anonymous
JSON.stringnify
JSON.parse

SPA : 한개페이지 index.html여기서 모두 서비스 되고 있는 페이지
눌렀을 때 url이 보임:  자바 스크립트로 
눌렀을 때 다른 페이지가 보임 :  자바스크립트로 컨트롤
(.js .md파일)
장점 : 깜빡임 같이 늘어지는 요소가 없다. 자원을 아끼고 재활용성을 높인다.
단점 : 개발 복잡도가 높다. 검색엔진에서 검색이 제대로 되지 않을 수 있다.
MPA  : 여러개페이지가 있다. 

dl dt dd 안에 div가 직계자식으로 포함하는 것이 가능하다